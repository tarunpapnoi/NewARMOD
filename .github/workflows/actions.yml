# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: FileAutomation1

on:
  workflow_dispatch:
    inputs:
      inputBANFile1:
        description: 'Path to the BAN list'
        required: false
      UserInput:
        description: 'Path to user scenarios file'
        required: false
      outputpath:
        description: 'Path to the output folder'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up JDK 11 (adjust based on your project's requirements)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # You can change this if you're using another JDK version
          distribution: 'temurin'

      # Check Java version (to ensure correct version is used)
      - name: Check Java version
        run: java -version

      # List repository files (helpful for debugging if paths are incorrect)
      - name: List repository files
        run: ls -R

      # Build with Maven
      - name: Build with Maven
        run: mvn -B clean install --settings ./settings.xml --file FileAutomation/pom.xml

      # Run ExcelReader main class
      #- name: Run ExcelReader main class
       # run: |
        #  java -cp FileAutomation/target/test-classes com.telus.Properties.ExcelReader
      - name: Run ExcelReader main class
        run: |
                    echo "Current Working Directory:"
                    pwd
            echo "Listing files in FileAutomation/ :"
            ls -al FileAutomation/
            echo "Running Maven to generate classpath file..."
            mvn -X dependency:build-classpath -Dmdep.outputFile=FileAutomation/classpath.txt -f FileAutomation/pom.xml
            echo "Checking for classpath file..."
            if [ ! -f FileAutomation/classpath.txt ]; then
              echo "Classpath file not found! Checking in the nested directory..."
              if [ ! -f FileAutomation/FileAutomation/classpath.txt ]; then
                echo "Classpath file not found in nested directory either!";
                exit 1;
              fi
              echo "Found classpath file in FileAutomation/FileAutomation/classpath.txt"
            fi
            # Use the correct path to read the classpath file
            CP=$(cat FileAutomation/classpath.txt):FileAutomation/target/test-classes
            echo "Executing Java with classpath: $CP"
            java -cp "$CP" com.telus.Properties.ExcelReader



