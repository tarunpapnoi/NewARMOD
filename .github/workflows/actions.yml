# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: FileAutomation

on:
  workflow_dispatch:
    inputs:
      inputBANFile1:
        description: 'Path to the BAN list'
        required: false
      UserInput:
        description: 'Path to user scenarios file'
        required: false
      outputpath:
        description: 'Path to the output folder'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up JDK 11 (adjust based on your project's requirements)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # You can change this if you're using another JDK version
          distribution: 'temurin'

      # Check Java version (to ensure correct version is used)
      - name: Check Java version
        run: java -version

      # List repository files (helpful for debugging if paths are incorrect)
      - name: List repository files
        run: ls -R

      # Build with Maven
      - name: Build with Maven
        run: mvn -B clean install --settings ./settings.xml --file FileAutomation/pom.xml

      # Run ExcelReader main class
      #- name: Run ExcelReader main class
       # run: |
        #  java -cp FileAutomation/target/test-classes com.telus.Properties.ExcelReader
      - name: Run ExcelReader main class
        run: |
          mvn dependency:build-classpath -Dmdep.outputFile=classpath.txt -f FileAutomation/pom.xml
          if [ ! -f classpath.txt ]; then echo "Classpath file not found!"; exit 1; fi
          CP=$(cat classpath.txt):FileAutomation/target/test-classes
          java -cp "$CP" com.telus.Properties.ExcelReader
          
      - name: Run ExcelReader main class


